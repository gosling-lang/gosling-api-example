{"version":3,"sources":["gos-template.js","App.js","index.js"],"names":["sampleColor","getSpec","cids","title","width","height","plusColor","minusColor","getSampleColor","index","length","getBwLink","cid","spacing","views","xDomain","chromosome","linkingId","tracks","id","layout","alignment","data","url","type","chromosomeField","genomicFields","mark","dataTransform","field","oneOf","not","text","color","domain","range","visibility","operation","measure","threshold","transitionPadding","target","style","textStrokeWidth","include","value","x","stroke","strokeWidth","opacity","xe","outline","outlineWidth","size","interval","name","valueFields","exonIntervalFields","dy","align","linePattern","row","background","method","boundingBox","startField","endField","newField","maxRows","filter","map","i","isBrush","column","binSize","y","getSampleBar","duration","initWidth","window","innerWidth","App","props","defaultKeyword","useState","searchKeyword","setSearchKeyword","setInnerWidth","undefined","metadata","setMetadata","gosRef","useRef","onZoom","gene","pos","current","api","zoomToGene","zoomTo","useEffect","addEventListener","debounce","e","inspector","fetch","then","response","ok","console","log","statusText","json","catch","error","warn","getTitle","meta","treats","cell_line__name","cell_type__name","join","newSpec","useMemo","padding","className","ref","spec","compiled","vConf","defaultValue","placeholder","onChange","Array","from","keys","d","k","onClick","chr","open","split","unique_id","species__name","tissue_type__name","disease_state__name","factor__name","href","link","rel","paper__reference","ReactDOM","render","component","document","getElementById"],"mappings":"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","file":"static/js/main.835ef168.chunk.js","sourcesContent":["export const sampleColor = [\"#0072B2\", \"#D45E00\", \"#029F73\", \"#E79F00\", \"#CB7AA7\"];\n\nexport const getSpec = ({ cids, title, width = 2000, height = 500 }) => {\n  // \"#0072B2\", \"#D45E00\"\n  const plusColor = \"#878787\"; //\"#D34B6C\";\n  const minusColor = \"#878787\"; //\"#5688B9\";\n\n  const getSampleColor = (index) => {\n    return sampleColor[index % sampleColor.length];\n  };\n\n  const getBwLink = (cid) =>\n    `http://dc2.cistrome.org/genome_browser/bw/${cid}_treat.bw`;\n\n  const getSampleBar = (cid, title, index, isBrush = false) => {\n    return {\n      alignment: \"overlay\",\n      data: {\n        url: getBwLink(cid),\n        type: \"bigwig\",\n        column: \"position\",\n        value: \"peak\",\n        binSize: 8,\n      },\n      title,\n      tracks: isBrush\n        ? [\n            {},\n            {\n              mark: \"brush\",\n              x: { linkingId: \"detail\" },\n              color: { value: \"#D34B6C\" },\n              stroke: { value: \"red\" },\n              strokeWidth: { value: 2 },\n              opacity: { value: 0.6 },\n            },\n          ]\n        : [{}],\n      mark: \"bar\",\n      x: { field: \"start\", type: \"genomic\" },\n      xe: { field: \"end\", type: \"genomic\" },\n      y: { field: \"peak\", type: \"quantitative\" },\n      color: { value: getSampleColor(index) },\n      stroke: { value: \"lightgray\" },\n      strokeWidth: { value: 0.5 },\n      style: { outline: \"gray\" },\n      // opacity: { value: 0.6 },\n      width,\n      height: 40,\n    };\n  };\n\n  // console.log(\n  //   cids,\n  //   cids.filter((cid) => +cid).map((cid) => getSampleBar(cid))\n  // );\n\n  return {\n    // title: \"Explore Cistrome Data Using Gosling.js\",\n    // subtitle: `Cistrome IDs: ${cids.join(\", \")}`,\n    spacing: 50,\n    views: [\n      {\n        xDomain: { chromosome: \"7\" },\n        linkingId: \"overview\",\n        tracks: [\n          // ...cids.filter(cid => +cid).map((cid, i) => getSampleBar(cid, i, true)),\n          {\n            id: \"overview\",\n            linkingId: \"overview\",\n            title: \"Ideogram\",\n            xDomain: { chromosome: \"7\" },\n            layout: \"linear\",\n            alignment: \"overlay\",\n            data: {\n              url:\n                \"https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/UCSC.HG38.Human.CytoBandIdeogram.csv\",\n              type: \"csv\",\n              chromosomeField: \"Chromosome\",\n              genomicFields: [\"chromStart\", \"chromEnd\"],\n            },\n            tracks: [\n              {\n                mark: \"text\",\n                dataTransform: [\n                  {\n                    type: \"filter\",\n                    field: \"Stain\",\n                    oneOf: [\"acen\"],\n                    not: true,\n                  },\n                ],\n                text: { field: \"Name\", type: \"nominal\" },\n                color: {\n                  field: \"Stain\",\n                  type: \"nominal\",\n                  domain: [\n                    \"gneg\",\n                    \"gpos25\",\n                    \"gpos50\",\n                    \"gpos75\",\n                    \"gpos100\",\n                    \"gvar\",\n                  ],\n                  range: [\"black\", \"black\", \"black\", \"black\", \"white\", \"black\"],\n                },\n                visibility: [\n                  {\n                    operation: \"less-than\",\n                    measure: \"width\",\n                    threshold: \"|xe-x|\",\n                    transitionPadding: 10,\n                    target: \"mark\",\n                  },\n                ],\n                style: { textStrokeWidth: 0 },\n              },\n              {\n                mark: \"rect\",\n                dataTransform: [\n                  {\n                    type: \"filter\",\n                    field: \"Stain\",\n                    oneOf: [\"acen\"],\n                    not: true,\n                  },\n                ],\n                color: {\n                  field: \"Stain\",\n                  type: \"nominal\",\n                  domain: [\n                    \"gneg\",\n                    \"gpos25\",\n                    \"gpos50\",\n                    \"gpos75\",\n                    \"gpos100\",\n                    \"gvar\",\n                  ],\n                  range: [\n                    \"white\",\n                    \"#D9D9D9\",\n                    \"#979797\",\n                    \"#636363\",\n                    \"black\",\n                    \"#82A3D0\",\n                  ],\n                },\n              },\n              {\n                mark: \"triangleRight\",\n                dataTransform: [\n                  { type: \"filter\", field: \"Stain\", oneOf: [\"acen\"] },\n                  { type: \"filter\", field: \"Name\", include: \"q\" },\n                ],\n                color: { value: \"#E9413B\" },\n              },\n              {\n                mark: \"triangleLeft\",\n                dataTransform: [\n                  { type: \"filter\", field: \"Stain\", oneOf: [\"acen\"] },\n                  { type: \"filter\", field: \"Name\", include: \"p\" },\n                ],\n                color: { value: \"#E9413B\" }, // #B40101\n              },\n              {\n                mark: \"brush\",\n                x: { linkingId: \"detail\" },\n                color: { value: \"#D34B6C\" },\n                stroke: { value: \"red\" },\n                strokeWidth: { value: 2 },\n                opacity: { value: 0.6 },\n              },\n            ],\n            x: { field: \"chromStart\", type: \"genomic\" },\n            xe: { field: \"chromEnd\", type: \"genomic\" },\n            stroke: { value: \"gray\" },\n            strokeWidth: { value: 0.5 },\n            style: { outline: \"black\", outlineWidth: 1 },\n            size: { value: 25 },\n            width,\n            height: 45,\n          },\n        ],\n      },\n      {\n        xDomain: { chromosome: \"7\", interval: [27066839, 27266927] },\n        linkingId: \"detail\",\n        tracks: [\n          {\n            id: \"detail-view\",\n            alignment: \"overlay\",\n            title: \"hg38 | Genes\",\n            data: {\n              url:\n                \"https://server.gosling-lang.org/api/v1/tileset_info/?d=gene-annotation\",\n              type: \"beddb\",\n              genomicFields: [\n                { index: 1, name: \"start\" },\n                { index: 2, name: \"end\" },\n              ],\n              valueFields: [\n                { index: 5, name: \"strand\", type: \"nominal\" },\n                { index: 3, name: \"name\", type: \"nominal\" },\n              ],\n              exonIntervalFields: [\n                { index: 12, name: \"start\" },\n                { index: 13, name: \"end\" },\n              ],\n            },\n            tracks: [\n              {\n                dataTransform: [\n                  { type: \"filter\", field: \"type\", oneOf: [\"gene\"] },\n                  { type: \"filter\", field: \"strand\", oneOf: [\"+\"] },\n                ],\n                mark: \"triangleRight\",\n                x: { field: \"end\", type: \"genomic\" },\n                size: { value: 15 },\n              },\n              {\n                dataTransform: [\n                  { type: \"filter\", field: \"type\", oneOf: [\"gene\"] },\n                ],\n                mark: \"text\",\n                text: { field: \"name\", type: \"nominal\" },\n                x: { field: \"start\", type: \"genomic\" },\n                xe: { field: \"end\", type: \"genomic\" },\n                style: { dy: -15, outline: \"black\", outlineWidth: 0 },\n              },\n              {\n                dataTransform: [\n                  { type: \"filter\", field: \"type\", oneOf: [\"gene\"] },\n                  { type: \"filter\", field: \"strand\", oneOf: [\"-\"] },\n                ],\n                mark: \"triangleLeft\",\n                x: { field: \"start\", type: \"genomic\" },\n                size: { value: 15 },\n                style: { align: \"right\", outline: \"black\", outlineWidth: 0 },\n              },\n              {\n                dataTransform: [\n                  { type: \"filter\", field: \"type\", oneOf: [\"exon\"] },\n                ],\n                mark: \"rect\",\n                x: { field: \"start\", type: \"genomic\" },\n                size: { value: 15 },\n                xe: { field: \"end\", type: \"genomic\" },\n              },\n              {\n                dataTransform: [\n                  { type: \"filter\", field: \"type\", oneOf: [\"gene\"] },\n                  { type: \"filter\", field: \"strand\", oneOf: [\"+\"] },\n                ],\n                mark: \"rule\",\n                x: { field: \"start\", type: \"genomic\" },\n                strokeWidth: { value: 2 },\n                xe: { field: \"end\", type: \"genomic\" },\n                style: {\n                  linePattern: { type: \"triangleRight\", size: 3.5 },\n                  outline: \"black\",\n                  outlineWidth: 0,\n                },\n              },\n              {\n                dataTransform: [\n                  { type: \"filter\", field: \"type\", oneOf: [\"gene\"] },\n                  { type: \"filter\", field: \"strand\", oneOf: [\"-\"] },\n                ],\n                mark: \"rule\",\n                x: { field: \"start\", type: \"genomic\" },\n                strokeWidth: { value: 2 },\n                xe: { field: \"end\", type: \"genomic\" },\n                style: {\n                  linePattern: { type: \"triangleLeft\", size: 3.5 },\n                  outline: \"black\",\n                  outlineWidth: 0,\n                },\n              },\n            ],\n            row: { field: \"strand\", type: \"nominal\", domain: [\"+\", \"-\"] },\n            color: {\n              field: \"strand\",\n              type: \"nominal\",\n              domain: [\"+\", \"-\"],\n              range: [plusColor, minusColor],\n            },\n            visibility: [\n              {\n                operation: \"less-than\",\n                measure: \"width\",\n                threshold: \"|xe-x|\",\n                transitionPadding: 10,\n                target: \"mark\",\n              },\n            ],\n            opacity: { value: 0.8 },\n            style: { background: \"#F5F5F5\", outlineWidth: 0 },\n            width,\n            height: 100,\n          },\n          {\n            title: \"hg38 | GENECODE Transcript (Max. 15 Rows)\",\n            alignment: \"overlay\",\n            data: {\n              url:\n                \"https://server.gosling-lang.org/api/v1/tileset_info/?d=transcript-hg38-beddb\",\n              type: \"beddb\",\n              genomicFields: [\n                { index: 1, name: \"start\" },\n                { index: 2, name: \"end\" },\n              ],\n              valueFields: [\n                { index: 0, name: 'chr', type: 'nominal' },\n                { index: 5, name: \"strand\", type: \"nominal\" },\n                { index: 3, name: \"name\", type: \"nominal\" },\n                {\"index\": 9, \"name\": \"exon_start\", \"type\": \"nominal\"},\n                {\"index\": 10, \"name\": \"exon_end\", \"type\": \"nominal\"}\n              ],\n            },\n            dataTransform: [\n              {\n                type: \"displace\",\n                method: \"pile\",\n                boundingBox: { startField: \"start\", endField: \"end\" },\n                newField: \"row\",\n                maxRows: 15,\n              },\n              { type: \"filter\", field: \"type\", oneOf: [\"gene\"] },\n            ],\n            tracks: [\n              {\n                dataTransform: [\n                  {\n                    type: \"displace\",\n                    method: \"pile\",\n                    boundingBox: { startField: \"start\", endField: \"end\" },\n                    newField: \"row\",\n                    maxRows: 15,\n                  },\n\n                  { type: \"filter\", field: \"type\", oneOf: [\"gene\"] },\n                  { type: \"filter\", field: \"strand\", oneOf: [\"+\"] },\n                ],\n                mark: \"triangleRight\",\n                x: { field: \"end\", type: \"genomic\" },\n                size: { value: 15 },\n              },\n              {\n                dataTransform: [\n                  {\n                    type: \"displace\",\n                    method: \"pile\",\n                    boundingBox: { startField: \"start\", endField: \"end\" },\n                    newField: \"row\",\n                    maxRows: 15,\n                  },\n                  { type: \"filter\", field: \"type\", oneOf: [\"gene\"] },\n                ],\n                mark: \"text\",\n                text: { field: \"name\", type: \"nominal\" },\n                x: { field: \"start\", type: \"genomic\" },\n                xe: { field: \"end\", type: \"genomic\" },\n                style: { dy: -10, outline: \"black\", outlineWidth: 0 },\n              },\n              {\n                dataTransform: [\n                  {\n                    type: \"displace\",\n                    method: \"pile\",\n                    boundingBox: { startField: \"start\", endField: \"end\" },\n                    newField: \"row\",\n                    maxRows: 15,\n                  },\n\n                  { type: \"filter\", field: \"type\", oneOf: [\"gene\"] },\n                  { type: \"filter\", field: \"strand\", oneOf: [\"-\"] },\n                ],\n                mark: \"triangleLeft\",\n                x: { field: \"start\", type: \"genomic\" },\n                size: { value: 15 },\n                style: { align: \"right\", outline: \"black\", outlineWidth: 0 },\n              },\n              {\n                \"dataTransform\": [\n                  {\n                    \"type\": \"displace\",\n                    \"method\": \"pile\",\n                    \"boundingBox\": {\"startField\": \"start\", \"endField\": \"end\"},\n                    \"newField\": \"row\",\n                    \"maxRows\": 15\n                  },\n                  {\n                    \"type\": \"exonSplit\",\n                    \"separator\": \",\",\n                    \"flag\": {\"field\": \"type\", \"value\": \"exon\"},\n                    \"fields\": [\n                      {\n                        \"field\": \"exon_start\",\n                        \"type\": \"genomic\",\n                        \"newField\": \"start\",\n                        \"chrField\": \"chr\"\n                      },\n                      {\n                        \"field\": \"exon_end\",\n                        \"type\": \"genomic\",\n                        \"newField\": \"end\",\n                        \"chrField\": \"chr\"\n                      }\n                    ]\n                  },\n                  {\"type\": \"filter\", \"field\": \"type\", \"oneOf\": [\"exon\"]}\n                ],\n                \"mark\": \"rect\",\n                \"size\": {\"value\": 15},\n                \"x\": {\"field\": \"start\", \"type\": \"genomic\"},\n                \"xe\": {\"field\": \"end\", \"type\": \"genomic\"}\n              },\n              {\n                dataTransform: [\n                  {\n                    type: \"displace\",\n                    method: \"pile\",\n                    boundingBox: { startField: \"start\", endField: \"end\" },\n                    newField: \"row\",\n                    maxRows: 15,\n                  },\n                  { type: \"filter\", field: \"type\", oneOf: [\"gene\"] },\n                  { type: \"filter\", field: \"strand\", oneOf: [\"+\"] },\n                ],\n                mark: \"rule\",\n                x: { field: \"start\", type: \"genomic\" },\n                strokeWidth: { value: 2 },\n                xe: { field: \"end\", type: \"genomic\" },\n                style: {\n                  linePattern: { type: \"triangleRight\", size: 3.5 },\n                  outline: \"black\",\n                  outlineWidth: 0,\n                },\n              },\n              {\n                dataTransform: [\n                  {\n                    type: \"displace\",\n                    method: \"pile\",\n                    boundingBox: { startField: \"start\", endField: \"end\" },\n                    newField: \"row\",\n                    maxRows: 15,\n                  },\n                  { type: \"filter\", field: \"type\", oneOf: [\"gene\"] },\n                  { type: \"filter\", field: \"strand\", oneOf: [\"-\"] },\n                ],\n                mark: \"rule\",\n                x: { field: \"start\", type: \"genomic\" },\n                strokeWidth: { value: 2 },\n                xe: { field: \"end\", type: \"genomic\" },\n                style: {\n                  linePattern: { type: \"triangleRight\", size: 3.5 },\n                  outline: \"black\",\n                  outlineWidth: 0,\n                },\n              },\n            ],\n            row: { field: \"row\", type: \"nominal\" },\n            color: {\n              field: \"strand\",\n              type: \"nominal\",\n              domain: [\"+\", \"-\"],\n              range: [plusColor, minusColor],\n            },\n            visibility: [\n              {\n                operation: \"less-than\",\n                measure: \"width\",\n                threshold: \"|xe-x|\",\n                transitionPadding: 10,\n                target: \"mark\",\n              },\n            ],\n            opacity: { value: 0.8 },\n            style: { outline: \"black\", outlineWidth: 0, background: \"white\" },\n            width,\n            height,\n          },\n          ...cids.filter((cid) => +cid).map((cid, i) => getSampleBar(cid, title, i)),\n        ],\n      },\n    ],\n  };\n};\n","import * as qs from \"qs\";\nimport { debounce } from \"lodash\";\nimport { validateGoslingSpec, GoslingComponent } from \"gosling.js\";\nimport { getSpec } from \"./gos-template\";\nimport \"./App.css\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\n\nconst padding = 20;\nconst duration = 1000;\nconst initWidth = window.innerWidth;\n\nfunction App(props) {\n  // url parameters\n  // const urlParams = qs.parse(props.location.search, { ignoreQueryPrefix: true });\n  // const cid = urlParams?.id; // Cistrome ID\n\n  const defaultKeyword = \"1\";\n  const [searchKeyword, setSearchKeyword] = useState(defaultKeyword);\n\n  // visual parameters\n  const [innerWidth, setInnerWidth] = useState(initWidth);\n\n  // Metadata\n  const [metadata, setMetadata] = useState(undefined);\n\n  // API of gosling.js\n  const gosRef = useRef();\n\n  function onZoom(gene, pos) {\n    if (!gosRef?.current) return;\n\n    gosRef.current.api.zoomToGene(\"detail-view\", gene, duration);\n    gosRef.current.api.zoomTo(\"overview\", pos, duration);\n  }\n\n  function onZoomChr(chr) {\n    if (!gosRef?.current) return;\n\n    gosRef.current.api.zoomTo(\"detail-view\", chr, duration);\n    gosRef.current.api.zoomTo(\"overview\", chr, duration);\n  }\n\n  useEffect(() => {\n    window.addEventListener(\n      \"resize\",\n      debounce((e) => {\n        setInnerWidth(window.innerWidth);\n      }, 1000)\n    );\n\n    inspector(defaultKeyword);\n  }, []);\n\n  // validate the spec\n  // const validity = validateGoslingSpec(getSpec({cid}));\n  // if(validity.state === 'error') {\n  //     console.warn('Gosling spec is invalid!', validity.message);\n  //     return;\n  // }\n\n  // refer to https://github.com/hms-dbmi/cistrome-explorer/blob/b12238aeadbaf4a41f5445c32dbe3d6518d6fd1d/src/demo/CistromeToolkit.js#L128\n  const inspector = (cid) => {\n    fetch(`http://dc2.cistrome.org/api/inspector?id=${cid}`)\n      .then((response) => {\n        if (!response.ok) {\n          console.log(`Error: ${response.statusText}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data);\n        setMetadata(data);\n      })\n      .catch((error) => {\n        console.warn(error);\n      })\n  };\n\n  useEffect(() => {\n    // const cids = searchKeyword.split(\",\");\n    if (+searchKeyword) {\n      inspector(searchKeyword);\n    }\n  }, [searchKeyword]);\n\n  const getTitle = (meta) => {\n    return [meta?.id, meta?.treats[0]?.name, meta?.treats[0]?.cell_line__name, meta?.treats[0]?.cell_type__name].join(' | ');\n  };\n\n  const newSpec = useMemo(() => {\n    console.log(metadata);\n    return getSpec({\n      cids: [metadata?.id],\n      title: [getTitle(metadata)],\n      width:\n        innerWidth -\n        padding * 2 /* padding */ -\n        400 /* gene panel on the left */ -\n        400 /* metadata panel on the right*/,\n    });\n  }, [metadata, innerWidth]);\n\n  return (\n    <>\n      <div className=\"vis\">\n        <GoslingComponent\n          ref={gosRef}\n          spec={newSpec}\n          padding={padding}\n          compiled={(spec, vConf) => {\n            /* Callback function when compiled */\n          }}\n        />\n      </div>\n      <div className=\"gene-list\">\n        <h5>Cistrome ID</h5>\n        <input\n          // ref={searchBoxRef}\n          className={\"search-box\"}\n          type=\"text\"\n          defaultValue={defaultKeyword}\n          name=\"default name\"\n          placeholder={`Cistrome ID (e.g., ${defaultKeyword})`}\n          // value={searchKeyword}\n          onChange={debounce((e) => {\n            setSearchKeyword(e.target.value);\n          }, 1000)}\n          // onKeyDown={(e) => {\n          //     switch(e.key){\n          //         case 'ArrowUp':\n          //             break;\n          //         case 'ArrowDown':\n          //             break;\n          //         case 'Enter':\n          //             setGeneSuggestions([]);\n          //             if(searchKeyword.includes('chr')) {\n          //                 hmRef.current.api.zoomTo(searchKeyword);\n          //             } else {\n          //                 hmRef.current.api.zoomToGene(searchKeyword);\n          //             }\n          //             break;\n          //         case 'Esc':\n          //         case 'Escape':\n          //             break;\n          //     }\n          // }}\n        />\n        <h5>Chromosomes</h5>\n        {[...Array.from(Array(22).keys()).map((d) => d + 1), \"X\", \"Y\"].map(\n          (k) => (\n            <span\n              key={k}\n              className=\"chr-button\"\n              onClick={() => onZoomChr(`chr${k}`)}\n            >{`chr${k}`}</span>\n          )\n        )}\n        <h5>Genes</h5>\n        <div className=\"gene-button\" onClick={() => onZoom(\"TP53\", \"chr17\")}>\n          TP53\n        </div>\n        <div className=\"gene-button\" onClick={() => onZoom(\"TNF\", \"chr6\")}>\n          TNF\n        </div>\n        <div className=\"gene-button\" onClick={() => onZoom(\"MYC\", \"chr8\")}>\n          MYC\n        </div>\n        <div className=\"gene-button\">...</div>\n        <h5>Expernal Links</h5>\n        <div\n          className=\"gene-button\"\n          onClick={() =>\n            window.open(\n              `http://dc2.cistrome.org/api/batchview/h/${searchKeyword\n                .split(\",\")\n                .join(\"_\")}/w/`,\n              \"_blank\"\n            )\n          }\n        >\n          Wash U Browser\n        </div>\n        <div\n          className=\"gene-button\"\n          onClick={() =>\n            window.open(\n              `http://dc2.cistrome.org/api/batchview/h/${searchKeyword\n                .split(\",\")\n                .join(\"_\")}/u/`,\n              \"_blank\"\n            )\n          }\n        >\n          UCSC Browser\n        </div>\n      </div>\n      <div className=\"metadata-table\">\n        <h5>Inspector</h5>\n        <table>\n          <tr>\n            <td>GEO or ENCODE</td>\n            <td>{metadata?.treats?.[0]?.unique_id}</td>\n          </tr>\n          <tr>\n            <td>Cistrome ID</td>\n            <td>{metadata?.id}</td>\n          </tr>\n          <tr>\n            <td>Species</td>\n            <td>{metadata?.treats?.[0]?.species__name}</td>\n          </tr>\n          <tr>\n            <td>Cell Line</td>\n            <td>{metadata?.treats?.[0]?.cell_line__name}</td>\n          </tr>\n          <tr>\n            <td>Cell Type</td>\n            <td>{metadata?.treats?.[0]?.cell_type__name}</td>\n          </tr>\n          <tr>\n            <td>Tissue</td>\n            <td>{metadata?.treats?.[0]?.tissue_type__name}</td>\n          </tr>\n          <tr>\n            <td>Disease</td>\n            <td>{metadata?.treats?.[0]?.disease_state__name}</td>\n          </tr>\n          <tr>\n            <td>Factor</td>\n            <td>{metadata?.treats?.[0]?.factor__name}</td>\n          </tr>\n          <tr>\n            <td>Paper</td>\n            <td><a href={metadata?.treats?.[0]?.link} target=\"_blank\" rel=\"noopener noreferrer\">{metadata?.treats?.[0]?.paper__reference}</a></td>\n          </tr>\n          <tr>\n            <td>Raw Data</td>\n            <td><a href={`http://dc2.cistrome.org/api/inspector?id=${metadata?.id}`} target=\"_blank\" rel=\"noopener noreferrer\">{'JSON'}</a></td>\n          </tr>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route component={App} />\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}